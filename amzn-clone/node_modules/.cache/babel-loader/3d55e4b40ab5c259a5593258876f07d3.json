{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  thousandSeparator: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf([true])]),\n  thousandSpacing: _propTypes2.default.oneOf(['2', '2s', '3', '4']),\n  decimalSeparator: _propTypes2.default.string,\n  decimalScale: _propTypes2.default.number,\n  fixedDecimalScale: _propTypes2.default.bool,\n  displayType: _propTypes2.default.oneOf(['input', 'text']),\n  prefix: _propTypes2.default.string,\n  suffix: _propTypes2.default.string,\n  format: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  removeFormatting: _propTypes2.default.func,\n  mask: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  isNumericString: _propTypes2.default.bool,\n  customInput: _propTypes2.default.func,\n  allowNegative: _propTypes2.default.bool,\n  onValueChange: _propTypes2.default.func,\n  onKeyDown: _propTypes2.default.func,\n  onMouseUp: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  type: _propTypes2.default.oneOf(['text', 'tel']),\n  isAllowed: _propTypes2.default.func,\n  renderText: _propTypes2.default.func\n};\nvar defaultProps = {\n  displayType: 'input',\n  decimalSeparator: '.',\n  thousandSpacing: '3',\n  fixedDecimalScale: false,\n  prefix: '',\n  suffix: '',\n  allowNegative: true,\n  isNumericString: false,\n  type: 'text',\n  onValueChange: _utils.noop,\n  onChange: _utils.noop,\n  onKeyDown: _utils.noop,\n  onMouseUp: _utils.noop,\n  onFocus: _utils.noop,\n  onBlur: _utils.noop,\n  isAllowed: _utils.returnTrue\n};\n\nvar CurrencyFormat = function (_React$Component) {\n  _inherits(CurrencyFormat, _React$Component);\n\n  function CurrencyFormat(props) {\n    _classCallCheck(this, CurrencyFormat); //validate props\n\n\n    var _this = _possibleConstructorReturn(this, (CurrencyFormat.__proto__ || Object.getPrototypeOf(CurrencyFormat)).call(this, props));\n\n    _this.validateProps();\n\n    var formattedValue = _this.formatValueProp();\n\n    _this.state = {\n      value: formattedValue,\n      numAsString: _this.removeFormatting(formattedValue)\n    };\n    _this.onChange = _this.onChange.bind(_this);\n    _this.onKeyDown = _this.onKeyDown.bind(_this);\n    _this.onMouseUp = _this.onMouseUp.bind(_this);\n    _this.onFocus = _this.onFocus.bind(_this);\n    _this.onBlur = _this.onBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(CurrencyFormat, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      this.updateValueIfRequired(prevProps);\n    }\n  }, {\n    key: 'updateValueIfRequired',\n    value: function updateValueIfRequired(prevProps) {\n      var props = this.props,\n          state = this.state;\n\n      if (prevProps !== props) {\n        //validate props\n        this.validateProps();\n        var stateValue = state.value;\n        var lastNumStr = state.numAsString || '';\n        var formattedValue = props.value === undefined ? this.formatNumString(lastNumStr) : this.formatValueProp();\n\n        if (formattedValue !== stateValue) {\n          this.setState({\n            value: formattedValue,\n            numAsString: this.removeFormatting(formattedValue)\n          });\n        }\n      }\n    }\n    /** Misc methods **/\n\n  }, {\n    key: 'getFloatString',\n    value: function getFloatString() {\n      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var _getSeparators = this.getSeparators(),\n          decimalSeparator = _getSeparators.decimalSeparator;\n\n      var numRegex = this.getNumberRegex(true); //remove negation for regex check\n\n      var hasNegation = num[0] === '-';\n      if (hasNegation) num = num.replace('-', '');\n      num = (num.match(numRegex) || []).join('').replace(decimalSeparator, '.'); //remove extra decimals\n\n      var firstDecimalIndex = num.indexOf('.');\n\n      if (firstDecimalIndex !== -1) {\n        num = num.substring(0, firstDecimalIndex) + '.' + num.substring(firstDecimalIndex + 1, num.length).replace(new RegExp((0, _utils.escapeRegExp)(decimalSeparator), 'g'), '');\n      } //add negation back\n\n\n      if (hasNegation) num = '-' + num;\n      return num;\n    } //returned regex assumes decimalSeparator is as per prop\n\n  }, {\n    key: 'getNumberRegex',\n    value: function getNumberRegex(g, ignoreDecimalSeparator) {\n      var _props = this.props,\n          format = _props.format,\n          decimalScale = _props.decimalScale;\n\n      var _getSeparators2 = this.getSeparators(),\n          decimalSeparator = _getSeparators2.decimalSeparator;\n\n      return new RegExp('\\\\d' + (decimalSeparator && decimalScale !== 0 && !ignoreDecimalSeparator && !format ? '|' + (0, _utils.escapeRegExp)(decimalSeparator) : ''), g ? 'g' : undefined);\n    }\n  }, {\n    key: 'getSeparators',\n    value: function getSeparators() {\n      var _props2 = this.props,\n          decimalSeparator = _props2.decimalSeparator,\n          thousandSpacing = _props2.thousandSpacing;\n      var thousandSeparator = this.props.thousandSeparator;\n\n      if (thousandSeparator === true) {\n        thousandSeparator = ',';\n      }\n\n      return {\n        decimalSeparator: decimalSeparator,\n        thousandSeparator: thousandSeparator,\n        thousandSpacing: thousandSpacing\n      };\n    }\n  }, {\n    key: 'getMaskAtIndex',\n    value: function getMaskAtIndex(index) {\n      var _props$mask = this.props.mask,\n          mask = _props$mask === undefined ? ' ' : _props$mask;\n\n      if (typeof mask === 'string') {\n        return mask;\n      }\n\n      return mask[index] || ' ';\n    }\n  }, {\n    key: 'validateProps',\n    value: function validateProps() {\n      var mask = this.props.mask; //validate decimalSeparator and thousandSeparator\n\n      var _getSeparators3 = this.getSeparators(),\n          decimalSeparator = _getSeparators3.decimalSeparator,\n          thousandSeparator = _getSeparators3.thousandSeparator;\n\n      if (decimalSeparator === thousandSeparator) {\n        throw new Error('\\n          Decimal separator can\\'t be same as thousand separator.\\n\\n          thousandSeparator: ' + thousandSeparator + ' (thousandSeparator = {true} is same as thousandSeparator = \",\")\\n          decimalSeparator: ' + decimalSeparator + ' (default value for decimalSeparator is .)\\n       ');\n      } //validate mask\n\n\n      if (mask) {\n        var maskAsStr = mask === 'string' ? mask : mask.toString();\n\n        if (maskAsStr.match(/\\d/g)) {\n          throw new Error('\\n          Mask ' + mask + ' should not contain numeric character;\\n        ');\n        }\n      }\n    }\n  }, {\n    key: 'splitDecimal',\n    value: function splitDecimal(numStr) {\n      var allowNegative = this.props.allowNegative;\n      var hasNagation = numStr[0] === '-';\n      var addNegation = hasNagation && allowNegative;\n      numStr = numStr.replace('-', '');\n      var parts = numStr.split('.');\n      var beforeDecimal = parts[0];\n      var afterDecimal = parts[1] || '';\n      return {\n        beforeDecimal: beforeDecimal,\n        afterDecimal: afterDecimal,\n        hasNagation: hasNagation,\n        addNegation: addNegation\n      };\n    }\n    /** Misc methods end **/\n\n    /** caret specific methods **/\n\n  }, {\n    key: 'setPatchedCaretPosition',\n    value: function setPatchedCaretPosition(el, caretPos, currentValue) {\n      /* setting caret position within timeout of 0ms is required for mobile chrome,\r\n      otherwise browser resets the caret position after we set it\r\n      We are also setting it without timeout so that in normal browser we don't see the flickering */\n      (0, _utils.setCaretPosition)(el, caretPos);\n      setTimeout(function () {\n        if (el.value === currentValue) (0, _utils.setCaretPosition)(el, caretPos);\n      }, 0);\n    }\n    /* This keeps the caret within typing area so people can't type in between prefix or suffix */\n\n  }, {\n    key: 'correctCaretPosition',\n    value: function correctCaretPosition(value, caretPos, direction) {\n      var _props3 = this.props,\n          prefix = _props3.prefix,\n          suffix = _props3.suffix,\n          format = _props3.format; //in case of format as number limit between prefix and suffix\n\n      if (!format) {\n        var hasNegation = value[0] === '-';\n        return Math.min(Math.max(caretPos, prefix.length + (hasNegation ? 1 : 0)), value.length - suffix.length);\n      } //in case if custom format method don't do anything\n\n\n      if (typeof format === 'function') return caretPos;\n      /* in case format is string find the closest # position from the caret position */\n      //in case the caretPos have input value on it don't do anything\n\n      if (format[caretPos] === '#' && (0, _utils.charIsNumber)(value[caretPos])) return caretPos; //if caretPos is just after input value don't do anything\n\n      if (format[caretPos - 1] === '#' && (0, _utils.charIsNumber)(value[caretPos - 1])) return caretPos; //find the nearest caret position\n\n      var firstHashPosition = format.indexOf('#');\n      var lastHashPosition = format.lastIndexOf('#'); //limit the cursor between the first # position and the last # position\n\n      caretPos = Math.min(Math.max(caretPos, firstHashPosition), lastHashPosition + 1);\n      var nextPos = format.substring(caretPos, format.length).indexOf('#');\n      var caretLeftBound = caretPos;\n      var caretRightBoud = caretPos + (nextPos === -1 ? 0 : nextPos); //get the position where the last number is present\n\n      while (caretLeftBound > firstHashPosition && (format[caretLeftBound] !== '#' || !(0, _utils.charIsNumber)(value[caretLeftBound]))) {\n        caretLeftBound -= 1;\n      }\n\n      var goToLeft = !(0, _utils.charIsNumber)(value[caretRightBoud]) || direction === 'left' && caretPos !== firstHashPosition || caretPos - caretLeftBound < caretRightBoud - caretPos;\n      return goToLeft ? caretLeftBound + 1 : caretRightBoud;\n    }\n  }, {\n    key: 'getCaretPosition',\n    value: function getCaretPosition(inputValue, formattedValue, caretPos) {\n      var format = this.props.format;\n      var stateValue = this.state.value;\n      var numRegex = this.getNumberRegex(true);\n      var inputNumber = (inputValue.match(numRegex) || []).join('');\n      var formattedNumber = (formattedValue.match(numRegex) || []).join('');\n      var j = void 0,\n          i = void 0;\n      j = 0;\n\n      for (i = 0; i < caretPos; i++) {\n        var currentInputChar = inputValue[i] || '';\n        var currentFormatChar = formattedValue[j] || ''; //no need to increase new cursor position if formatted value does not have those characters\n        //case inputValue = 1a23 and formattedValue =  123\n\n        if (!currentInputChar.match(numRegex) && currentInputChar !== currentFormatChar) continue; //When we are striping out leading zeros maintain the new cursor position\n        //Case inputValue = 00023 and formattedValue = 23;\n\n        if (currentInputChar === '0' && currentFormatChar.match(numRegex) && currentFormatChar !== '0' && inputNumber.length !== formattedNumber.length) continue; //we are not using currentFormatChar because j can change here\n\n        while (currentInputChar !== formattedValue[j] && j < formattedValue.length) {\n          j++;\n        }\n\n        j++;\n      }\n\n      if (typeof format === 'string' && !stateValue) {\n        //set it to the maximum value so it goes after the last number\n        j = formattedValue.length;\n      } //correct caret position if its outside of editable area\n\n\n      j = this.correctCaretPosition(formattedValue, j);\n      return j;\n    }\n    /** caret specific methods ends **/\n\n    /** methods to remove formattting **/\n\n  }, {\n    key: 'removePrefixAndSuffix',\n    value: function removePrefixAndSuffix(val) {\n      var _props4 = this.props,\n          format = _props4.format,\n          prefix = _props4.prefix,\n          suffix = _props4.suffix; //remove prefix and suffix\n\n      if (!format && val) {\n        var isNegative = val[0] === '-'; //remove negation sign\n\n        if (isNegative) val = val.substring(1, val.length); //remove prefix\n\n        val = prefix && val.indexOf(prefix) === 0 ? val.substring(prefix.length, val.length) : val; //remove suffix\n\n        var suffixLastIndex = val.lastIndexOf(suffix);\n        val = suffix && suffixLastIndex !== -1 && suffixLastIndex === val.length - suffix.length ? val.substring(0, suffixLastIndex) : val; //add negation sign back\n\n        if (isNegative) val = '-' + val;\n      }\n\n      return val;\n    }\n  }, {\n    key: 'removePatternFormatting',\n    value: function removePatternFormatting(val) {\n      var format = this.props.format;\n      var formatArray = format.split('#').filter(function (str) {\n        return str !== '';\n      });\n      var start = 0;\n      var numStr = '';\n\n      for (var i = 0, ln = formatArray.length; i <= ln; i++) {\n        var part = formatArray[i] || ''; //if i is the last fragment take the index of end of the value\n        //For case like +1 (911) 911 91 91 having pattern +1 (###) ### ## ##\n\n        var index = i === ln ? val.length : val.indexOf(part, start);\n        /* in any case if we don't find the pattern part in the value assume the val as numeric string\r\n        This will be also in case if user has started typing, in any other case it will not be -1\r\n        unless wrong prop value is provided */\n\n        if (index === -1) {\n          numStr = val;\n          break;\n        } else {\n          numStr += val.substring(start, index);\n          start = index + part.length;\n        }\n      }\n\n      return (numStr.match(/\\d/g) || []).join('');\n    }\n  }, {\n    key: 'removeFormatting',\n    value: function removeFormatting(val) {\n      var _props5 = this.props,\n          format = _props5.format,\n          removeFormatting = _props5.removeFormatting;\n      if (!val) return val;\n\n      if (!format) {\n        val = this.removePrefixAndSuffix(val);\n        val = this.getFloatString(val);\n      } else if (typeof format === 'string') {\n        val = this.removePatternFormatting(val);\n      } else if (typeof removeFormatting === 'function') {\n        //condition need to be handled if format method is provide,\n        val = removeFormatting(val);\n      } else {\n        val = (val.match(/\\d/g) || []).join('');\n      }\n\n      return val;\n    }\n    /** methods to remove formattting end **/\n\n    /*** format specific methods start ***/\n\n    /**\r\n     * Format when # based string is provided\r\n     * @param  {string} numStr Numeric String\r\n     * @return {string}        formatted Value\r\n     */\n\n  }, {\n    key: 'formatWithPattern',\n    value: function formatWithPattern(numStr) {\n      var format = this.props.format;\n      var hashCount = 0;\n      var formattedNumberAry = format.split('');\n\n      for (var i = 0, ln = format.length; i < ln; i++) {\n        if (format[i] === '#') {\n          formattedNumberAry[i] = numStr[hashCount] || this.getMaskAtIndex(hashCount);\n          hashCount += 1;\n        }\n      }\n\n      return formattedNumberAry.join('');\n    }\n    /**\r\n     * Format the given string according to thousand separator and thousand spacing\r\n     * @param {*} beforeDecimal \r\n     * @param {*} thousandSeparator \r\n     * @param {*} thousandSpacing \r\n     */\n\n  }, {\n    key: 'formatThousand',\n    value: function formatThousand(beforeDecimal, thousandSeparator, thousandSpacing) {\n      var digitalGroup = void 0;\n\n      switch (thousandSpacing) {\n        case _utils.thousandGroupSpacing.two:\n          digitalGroup = /(\\d)(?=(\\d{2})+(?!\\d))/g;\n          break;\n\n        case _utils.thousandGroupSpacing.twoScaled:\n          digitalGroup = /(\\d)(?=(((\\d{2})+)(\\d{1})(?!\\d)))/g;\n          break;\n\n        case _utils.thousandGroupSpacing.four:\n          digitalGroup = /(\\d)(?=(\\d{4})+(?!\\d))/g;\n          break;\n\n        default:\n          digitalGroup = /(\\d)(?=(\\d{3})+(?!\\d))/g;\n      }\n\n      return beforeDecimal.replace(digitalGroup, '$1' + thousandSeparator);\n    }\n    /**\r\n     * @param  {string} numStr Numeric string/floatString] It always have decimalSeparator as .\r\n     * @return {string} formatted Value\r\n     */\n\n  }, {\n    key: 'formatAsNumber',\n    value: function formatAsNumber(numStr) {\n      var _props6 = this.props,\n          decimalScale = _props6.decimalScale,\n          fixedDecimalScale = _props6.fixedDecimalScale,\n          prefix = _props6.prefix,\n          suffix = _props6.suffix;\n\n      var _getSeparators4 = this.getSeparators(),\n          thousandSeparator = _getSeparators4.thousandSeparator,\n          decimalSeparator = _getSeparators4.decimalSeparator,\n          thousandSpacing = _getSeparators4.thousandSpacing;\n\n      var hasDecimalSeparator = numStr.indexOf('.') !== -1 || decimalScale && fixedDecimalScale;\n\n      var _splitDecimal = this.splitDecimal(numStr),\n          beforeDecimal = _splitDecimal.beforeDecimal,\n          afterDecimal = _splitDecimal.afterDecimal,\n          addNegation = _splitDecimal.addNegation; // eslint-disable-line prefer-const\n      //apply decimal precision if its defined\n\n\n      if (decimalScale !== undefined) afterDecimal = (0, _utils.limitToScale)(afterDecimal, decimalScale, fixedDecimalScale);\n\n      if (thousandSeparator) {\n        beforeDecimal = this.formatThousand(beforeDecimal, thousandSeparator, thousandSpacing);\n      } //add prefix and suffix\n\n\n      if (prefix) beforeDecimal = prefix + beforeDecimal;\n      if (suffix) afterDecimal = afterDecimal + suffix; //restore negation sign\n\n      if (addNegation) beforeDecimal = '-' + beforeDecimal;\n      numStr = beforeDecimal + (hasDecimalSeparator && decimalSeparator || '') + afterDecimal;\n      return numStr;\n    }\n  }, {\n    key: 'formatNumString',\n    value: function formatNumString() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var format = this.props.format;\n      var formattedValue = value;\n\n      if (value === '') {\n        formattedValue = '';\n      } else if (value === '-' && !format) {\n        formattedValue = '-';\n        value = '';\n      } else if (typeof format === 'string') {\n        formattedValue = this.formatWithPattern(formattedValue);\n      } else if (typeof format === 'function') {\n        formattedValue = format(formattedValue);\n      } else {\n        formattedValue = this.formatAsNumber(formattedValue);\n      }\n\n      return formattedValue;\n    }\n  }, {\n    key: 'formatValueProp',\n    value: function formatValueProp() {\n      var _props7 = this.props,\n          format = _props7.format,\n          decimalScale = _props7.decimalScale,\n          fixedDecimalScale = _props7.fixedDecimalScale;\n      var _props8 = this.props,\n          value = _props8.value,\n          isNumericString = _props8.isNumericString; // if value is not defined return empty string\n\n      if (value === undefined) return '';\n\n      if (typeof value === 'number') {\n        value = value.toString();\n        isNumericString = true;\n      } //round the number based on decimalScale\n      //format only if non formatted value is provided\n\n\n      if (isNumericString && !format && typeof decimalScale === 'number') {\n        value = (0, _utils.roundToPrecision)(value, decimalScale, fixedDecimalScale);\n      }\n\n      var formattedValue = isNumericString ? this.formatNumString(value) : this.formatInput(value);\n      return formattedValue;\n    }\n  }, {\n    key: 'formatNegation',\n    value: function formatNegation() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var allowNegative = this.props.allowNegative;\n      var negationRegex = new RegExp('(-)');\n      var doubleNegationRegex = new RegExp('(-)(.)*(-)'); // Check number has '-' value\n\n      var hasNegation = negationRegex.test(value); // Check number has 2 or more '-' values\n\n      var removeNegation = doubleNegationRegex.test(value); //remove negation\n\n      value = value.replace(/-/g, '');\n\n      if (hasNegation && !removeNegation && allowNegative) {\n        value = '-' + value;\n      }\n\n      return value;\n    }\n  }, {\n    key: 'formatInput',\n    value: function formatInput() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var format = this.props.format; //format negation only if we are formatting as number\n\n      if (!format) {\n        value = this.formatNegation(value);\n      } //remove formatting from number\n\n\n      value = this.removeFormatting(value);\n      return this.formatNumString(value);\n    }\n    /*** format specific methods end ***/\n\n  }, {\n    key: 'isCharacterAFormat',\n    value: function isCharacterAFormat(caretPos, value) {\n      var _props9 = this.props,\n          format = _props9.format,\n          prefix = _props9.prefix,\n          suffix = _props9.suffix,\n          decimalScale = _props9.decimalScale,\n          fixedDecimalScale = _props9.fixedDecimalScale;\n\n      var _getSeparators5 = this.getSeparators(),\n          decimalSeparator = _getSeparators5.decimalSeparator; //check within format pattern\n\n\n      if (typeof format === 'string' && format[caretPos] !== '#') return true; //check in number format\n\n      if (!format && (caretPos < prefix.length || caretPos >= value.length - suffix.length || decimalScale && fixedDecimalScale && value[caretPos] === decimalSeparator)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'checkIfFormatGotDeleted',\n    value: function checkIfFormatGotDeleted(start, end, value) {\n      for (var i = start; i < end; i++) {\n        if (this.isCharacterAFormat(i, value)) return true;\n      }\n\n      return false;\n    }\n    /**\r\n     * This will check if any formatting got removed by the delete or backspace and reset the value\r\n     * It will also work as fallback if android chome keyDown handler does not work\r\n     **/\n\n  }, {\n    key: 'correctInputValue',\n    value: function correctInputValue(caretPos, lastValue, value) {\n      var format = this.props.format;\n      var lastNumStr = this.state.numAsString || ''; //don't do anyhting if something got added, or if value is empty string (when whole input is cleared)\n\n      if (value.length >= lastValue.length || !value.length) {\n        return value;\n      }\n\n      var start = caretPos;\n      var lastValueParts = (0, _utils.splitString)(lastValue, caretPos);\n      var newValueParts = (0, _utils.splitString)(value, caretPos);\n      var deletedIndex = lastValueParts[1].lastIndexOf(newValueParts[1]);\n      var diff = deletedIndex !== -1 ? lastValueParts[1].substring(0, deletedIndex) : '';\n      var end = start + diff.length; //if format got deleted reset the value to last value\n\n      if (this.checkIfFormatGotDeleted(start, end, lastValue)) {\n        value = lastValue;\n      } //for numbers check if beforeDecimal got deleted and there is nothing after decimal,\n      //clear all numbers in such case while keeping the - sign\n\n\n      if (!format) {\n        var numericString = this.removeFormatting(value);\n\n        var _splitDecimal2 = this.splitDecimal(numericString),\n            beforeDecimal = _splitDecimal2.beforeDecimal,\n            afterDecimal = _splitDecimal2.afterDecimal,\n            addNegation = _splitDecimal2.addNegation; // eslint-disable-line prefer-const\n        //clear only if something got deleted\n\n\n        if (numericString.length < lastNumStr.length && beforeDecimal === '' && !parseFloat(afterDecimal)) {\n          return addNegation ? '-' : '';\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(e) {\n      e.persist();\n      var el = e.target;\n      var inputValue = el.value;\n      var state = this.state,\n          props = this.props;\n      var isAllowed = props.isAllowed;\n      var lastValue = state.value || '';\n      /*Max of selectionStart and selectionEnd is taken for the patch of pixel and other mobile device caret bug*/\n\n      var currentCaretPosition = Math.max(el.selectionStart, el.selectionEnd);\n      inputValue = this.correctInputValue(currentCaretPosition, lastValue, inputValue);\n      var formattedValue = this.formatInput(inputValue) || '';\n      var numAsString = this.removeFormatting(formattedValue);\n      var valueObj = {\n        formattedValue: formattedValue,\n        value: numAsString,\n        floatValue: parseFloat(numAsString)\n      };\n\n      if (!isAllowed(valueObj)) {\n        formattedValue = lastValue;\n      } //set the value imperatively, this is required for IE fix\n\n\n      el.value = formattedValue; //get the caret position\n\n      var caretPos = this.getCaretPosition(inputValue, formattedValue, currentCaretPosition); //set caret position\n\n      this.setPatchedCaretPosition(el, caretPos, formattedValue); //change the state\n\n      if (formattedValue !== lastValue) {\n        this.setState({\n          value: formattedValue,\n          numAsString: numAsString\n        }, function () {\n          props.onValueChange(valueObj);\n          props.onChange(e);\n        });\n      } else {\n        props.onChange(e);\n      }\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(e) {\n      var props = this.props,\n          state = this.state;\n      var format = props.format,\n          onBlur = props.onBlur;\n      var numAsString = state.numAsString;\n      var lastValue = state.value;\n\n      if (!format) {\n        numAsString = (0, _utils.fixLeadingZero)(numAsString);\n        var formattedValue = this.formatNumString(numAsString);\n        var valueObj = {\n          formattedValue: formattedValue,\n          value: numAsString,\n          floatValue: parseFloat(numAsString)\n        }; //change the state\n\n        if (formattedValue !== lastValue) {\n          // the event needs to be persisted because its properties can be accessed in an asynchronous way\n          e.persist();\n          this.setState({\n            value: formattedValue,\n            numAsString: numAsString\n          }, function () {\n            props.onValueChange(valueObj);\n            onBlur(e);\n          });\n          return;\n        }\n      }\n\n      onBlur(e);\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(e) {\n      var el = e.target;\n      var key = e.key;\n      var selectionEnd = el.selectionEnd,\n          value = el.value;\n      var selectionStart = el.selectionStart;\n      var expectedCaretPosition = void 0;\n      var _props10 = this.props,\n          decimalScale = _props10.decimalScale,\n          fixedDecimalScale = _props10.fixedDecimalScale,\n          prefix = _props10.prefix,\n          suffix = _props10.suffix,\n          format = _props10.format,\n          onKeyDown = _props10.onKeyDown;\n      var ignoreDecimalSeparator = decimalScale !== undefined && fixedDecimalScale;\n      var numRegex = this.getNumberRegex(false, ignoreDecimalSeparator);\n      var negativeRegex = new RegExp('-');\n      var isPatternFormat = typeof format === 'string'; //Handle backspace and delete against non numerical/decimal characters or arrow keys\n\n      if (key === 'ArrowLeft' || key === 'Backspace') {\n        expectedCaretPosition = selectionStart - 1;\n      } else if (key === 'ArrowRight') {\n        expectedCaretPosition = selectionStart + 1;\n      } else if (key === 'Delete') {\n        expectedCaretPosition = selectionStart;\n      } //if expectedCaretPosition is not set it means we don't want to Handle keyDown\n      //also if multiple characters are selected don't handle\n\n\n      if (expectedCaretPosition === undefined || selectionStart !== selectionEnd) {\n        onKeyDown(e);\n        return;\n      }\n\n      var newCaretPosition = expectedCaretPosition;\n      var leftBound = isPatternFormat ? format.indexOf('#') : prefix.length;\n      var rightBound = isPatternFormat ? format.lastIndexOf('#') + 1 : value.length - suffix.length;\n\n      if (key === 'ArrowLeft' || key === 'ArrowRight') {\n        var direction = key === 'ArrowLeft' ? 'left' : 'right';\n        newCaretPosition = this.correctCaretPosition(value, expectedCaretPosition, direction);\n      } else if (key === 'Delete' && !numRegex.test(value[expectedCaretPosition]) && !negativeRegex.test(value[expectedCaretPosition])) {\n        while (!numRegex.test(value[newCaretPosition]) && newCaretPosition < rightBound) {\n          newCaretPosition++;\n        }\n      } else if (key === 'Backspace' && !numRegex.test(value[expectedCaretPosition]) && !negativeRegex.test(value[expectedCaretPosition])) {\n        while (!numRegex.test(value[newCaretPosition - 1]) && newCaretPosition > leftBound) {\n          newCaretPosition--;\n        }\n\n        newCaretPosition = this.correctCaretPosition(value, newCaretPosition, 'left');\n      }\n\n      if (newCaretPosition !== expectedCaretPosition || expectedCaretPosition < leftBound || expectedCaretPosition > rightBound) {\n        e.preventDefault();\n        this.setPatchedCaretPosition(el, newCaretPosition, value);\n      }\n      /* NOTE: this is just required for unit test as we need to get the newCaretPosition,\r\n              Remove this when you find different solution */\n\n\n      if (e.isUnitTestRun) {\n        this.setPatchedCaretPosition(el, newCaretPosition, value);\n      }\n\n      this.props.onKeyDown(e);\n    }\n    /** required to handle the caret position when click anywhere within the input **/\n\n  }, {\n    key: 'onMouseUp',\n    value: function onMouseUp(e) {\n      var el = e.target;\n      var selectionStart = el.selectionStart,\n          selectionEnd = el.selectionEnd,\n          value = el.value;\n\n      if (selectionStart === selectionEnd) {\n        var caretPostion = this.correctCaretPosition(value, selectionStart);\n\n        if (caretPostion !== selectionStart) {\n          this.setPatchedCaretPosition(el, caretPostion, value);\n        }\n      }\n\n      this.props.onMouseUp(e);\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus(e) {\n      var _this2 = this; // Workaround Chrome and Safari bug https://bugs.chromium.org/p/chromium/issues/detail?id=779328\n      // (onFocus event target selectionStart is always 0 before setTimeout)\n\n\n      e.persist();\n      setTimeout(function () {\n        var el = e.target;\n        var selectionStart = el.selectionStart,\n            value = el.value;\n\n        var caretPosition = _this2.correctCaretPosition(value, selectionStart);\n\n        if (caretPosition !== selectionStart) {\n          _this2.setPatchedCaretPosition(el, caretPosition, value);\n        }\n\n        _this2.props.onFocus(e);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props11 = this.props,\n          type = _props11.type,\n          displayType = _props11.displayType,\n          customInput = _props11.customInput,\n          renderText = _props11.renderText;\n      var value = this.state.value;\n      var otherProps = (0, _utils.omit)(this.props, propTypes);\n\n      var inputProps = _extends({}, otherProps, {\n        type: type,\n        value: value,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onMouseUp: this.onMouseUp,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      });\n\n      if (displayType === 'text') {\n        return renderText ? renderText(value) || null : _react2.default.createElement('span', otherProps, value);\n      } else if (customInput) {\n        var CustomInput = customInput;\n        return _react2.default.createElement(CustomInput, inputProps);\n      }\n\n      return _react2.default.createElement('input', inputProps);\n    }\n  }]);\n\n  return CurrencyFormat;\n}(_react2.default.Component);\n\nCurrencyFormat.propTypes = propTypes;\nCurrencyFormat.defaultProps = defaultProps;\nmodule.exports = CurrencyFormat;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_propTypes","require","_propTypes2","_interopRequireDefault","_react","_react2","_utils","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","propTypes","thousandSeparator","oneOfType","string","oneOf","thousandSpacing","decimalSeparator","decimalScale","number","fixedDecimalScale","bool","displayType","prefix","suffix","format","func","removeFormatting","mask","arrayOf","isNumericString","customInput","allowNegative","onValueChange","onKeyDown","onMouseUp","onChange","onFocus","onBlur","type","isAllowed","renderText","defaultProps","noop","returnTrue","CurrencyFormat","_React$Component","_this","getPrototypeOf","validateProps","formattedValue","formatValueProp","state","numAsString","bind","componentDidUpdate","prevProps","updateValueIfRequired","stateValue","lastNumStr","undefined","formatNumString","setState","getFloatString","num","_getSeparators","getSeparators","numRegex","getNumberRegex","hasNegation","replace","match","join","firstDecimalIndex","indexOf","substring","RegExp","escapeRegExp","g","ignoreDecimalSeparator","_props","_getSeparators2","_props2","getMaskAtIndex","index","_props$mask","_getSeparators3","Error","maskAsStr","toString","splitDecimal","numStr","hasNagation","addNegation","parts","split","beforeDecimal","afterDecimal","setPatchedCaretPosition","el","caretPos","currentValue","setCaretPosition","setTimeout","correctCaretPosition","direction","_props3","Math","min","max","charIsNumber","firstHashPosition","lastHashPosition","lastIndexOf","nextPos","caretLeftBound","caretRightBoud","goToLeft","getCaretPosition","inputValue","inputNumber","formattedNumber","j","currentInputChar","currentFormatChar","removePrefixAndSuffix","val","_props4","isNegative","suffixLastIndex","removePatternFormatting","formatArray","filter","str","start","ln","part","_props5","formatWithPattern","hashCount","formattedNumberAry","formatThousand","digitalGroup","thousandGroupSpacing","two","twoScaled","four","formatAsNumber","_props6","_getSeparators4","hasDecimalSeparator","_splitDecimal","limitToScale","_props7","_props8","roundToPrecision","formatInput","formatNegation","negationRegex","doubleNegationRegex","test","removeNegation","isCharacterAFormat","_props9","_getSeparators5","checkIfFormatGotDeleted","end","correctInputValue","lastValue","lastValueParts","splitString","newValueParts","deletedIndex","diff","numericString","_splitDecimal2","parseFloat","e","persist","currentCaretPosition","selectionStart","selectionEnd","valueObj","floatValue","fixLeadingZero","expectedCaretPosition","_props10","negativeRegex","isPatternFormat","newCaretPosition","leftBound","rightBound","preventDefault","isUnitTestRun","caretPostion","_this2","caretPosition","render","_props11","otherProps","omit","inputProps","createElement","CustomInput","Component","module","exports"],"sources":["/home/bdl/amzn-clone/node_modules/react-currency-format/lib/currency-format.js"],"sourcesContent":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  thousandSeparator: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.oneOf([true])]),\n  thousandSpacing: _propTypes2.default.oneOf(['2', '2s', '3', '4']),\n  decimalSeparator: _propTypes2.default.string,\n  decimalScale: _propTypes2.default.number,\n  fixedDecimalScale: _propTypes2.default.bool,\n  displayType: _propTypes2.default.oneOf(['input', 'text']),\n  prefix: _propTypes2.default.string,\n  suffix: _propTypes2.default.string,\n  format: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  removeFormatting: _propTypes2.default.func,\n  mask: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  isNumericString: _propTypes2.default.bool,\n  customInput: _propTypes2.default.func,\n  allowNegative: _propTypes2.default.bool,\n  onValueChange: _propTypes2.default.func,\n  onKeyDown: _propTypes2.default.func,\n  onMouseUp: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  type: _propTypes2.default.oneOf(['text', 'tel']),\n  isAllowed: _propTypes2.default.func,\n  renderText: _propTypes2.default.func\n};\n\nvar defaultProps = {\n  displayType: 'input',\n  decimalSeparator: '.',\n  thousandSpacing: '3',\n  fixedDecimalScale: false,\n  prefix: '',\n  suffix: '',\n  allowNegative: true,\n  isNumericString: false,\n  type: 'text',\n  onValueChange: _utils.noop,\n  onChange: _utils.noop,\n  onKeyDown: _utils.noop,\n  onMouseUp: _utils.noop,\n  onFocus: _utils.noop,\n  onBlur: _utils.noop,\n  isAllowed: _utils.returnTrue\n};\n\nvar CurrencyFormat = function (_React$Component) {\n  _inherits(CurrencyFormat, _React$Component);\n\n  function CurrencyFormat(props) {\n    _classCallCheck(this, CurrencyFormat);\n\n    //validate props\n    var _this = _possibleConstructorReturn(this, (CurrencyFormat.__proto__ || Object.getPrototypeOf(CurrencyFormat)).call(this, props));\n\n    _this.validateProps();\n\n    var formattedValue = _this.formatValueProp();\n\n    _this.state = {\n      value: formattedValue,\n      numAsString: _this.removeFormatting(formattedValue)\n    };\n\n    _this.onChange = _this.onChange.bind(_this);\n    _this.onKeyDown = _this.onKeyDown.bind(_this);\n    _this.onMouseUp = _this.onMouseUp.bind(_this);\n    _this.onFocus = _this.onFocus.bind(_this);\n    _this.onBlur = _this.onBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(CurrencyFormat, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      this.updateValueIfRequired(prevProps);\n    }\n  }, {\n    key: 'updateValueIfRequired',\n    value: function updateValueIfRequired(prevProps) {\n      var props = this.props,\n          state = this.state;\n\n\n      if (prevProps !== props) {\n        //validate props\n        this.validateProps();\n\n        var stateValue = state.value;\n\n        var lastNumStr = state.numAsString || '';\n\n        var formattedValue = props.value === undefined ? this.formatNumString(lastNumStr) : this.formatValueProp();\n\n        if (formattedValue !== stateValue) {\n          this.setState({\n            value: formattedValue,\n            numAsString: this.removeFormatting(formattedValue)\n          });\n        }\n      }\n    }\n\n    /** Misc methods **/\n\n  }, {\n    key: 'getFloatString',\n    value: function getFloatString() {\n      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var _getSeparators = this.getSeparators(),\n          decimalSeparator = _getSeparators.decimalSeparator;\n\n      var numRegex = this.getNumberRegex(true);\n\n      //remove negation for regex check\n      var hasNegation = num[0] === '-';\n      if (hasNegation) num = num.replace('-', '');\n\n      num = (num.match(numRegex) || []).join('').replace(decimalSeparator, '.');\n\n      //remove extra decimals\n      var firstDecimalIndex = num.indexOf('.');\n\n      if (firstDecimalIndex !== -1) {\n        num = num.substring(0, firstDecimalIndex) + '.' + num.substring(firstDecimalIndex + 1, num.length).replace(new RegExp((0, _utils.escapeRegExp)(decimalSeparator), 'g'), '');\n      }\n\n      //add negation back\n      if (hasNegation) num = '-' + num;\n\n      return num;\n    }\n\n    //returned regex assumes decimalSeparator is as per prop\n\n  }, {\n    key: 'getNumberRegex',\n    value: function getNumberRegex(g, ignoreDecimalSeparator) {\n      var _props = this.props,\n          format = _props.format,\n          decimalScale = _props.decimalScale;\n\n      var _getSeparators2 = this.getSeparators(),\n          decimalSeparator = _getSeparators2.decimalSeparator;\n\n      return new RegExp('\\\\d' + (decimalSeparator && decimalScale !== 0 && !ignoreDecimalSeparator && !format ? '|' + (0, _utils.escapeRegExp)(decimalSeparator) : ''), g ? 'g' : undefined);\n    }\n  }, {\n    key: 'getSeparators',\n    value: function getSeparators() {\n      var _props2 = this.props,\n          decimalSeparator = _props2.decimalSeparator,\n          thousandSpacing = _props2.thousandSpacing;\n      var thousandSeparator = this.props.thousandSeparator;\n\n\n      if (thousandSeparator === true) {\n        thousandSeparator = ',';\n      }\n\n      return {\n        decimalSeparator: decimalSeparator,\n        thousandSeparator: thousandSeparator,\n        thousandSpacing: thousandSpacing\n      };\n    }\n  }, {\n    key: 'getMaskAtIndex',\n    value: function getMaskAtIndex(index) {\n      var _props$mask = this.props.mask,\n          mask = _props$mask === undefined ? ' ' : _props$mask;\n\n      if (typeof mask === 'string') {\n        return mask;\n      }\n\n      return mask[index] || ' ';\n    }\n  }, {\n    key: 'validateProps',\n    value: function validateProps() {\n      var mask = this.props.mask;\n\n      //validate decimalSeparator and thousandSeparator\n\n      var _getSeparators3 = this.getSeparators(),\n          decimalSeparator = _getSeparators3.decimalSeparator,\n          thousandSeparator = _getSeparators3.thousandSeparator;\n\n      if (decimalSeparator === thousandSeparator) {\n        throw new Error('\\n          Decimal separator can\\'t be same as thousand separator.\\n\\n          thousandSeparator: ' + thousandSeparator + ' (thousandSeparator = {true} is same as thousandSeparator = \",\")\\n          decimalSeparator: ' + decimalSeparator + ' (default value for decimalSeparator is .)\\n       ');\n      }\n\n      //validate mask\n      if (mask) {\n        var maskAsStr = mask === 'string' ? mask : mask.toString();\n        if (maskAsStr.match(/\\d/g)) {\n          throw new Error('\\n          Mask ' + mask + ' should not contain numeric character;\\n        ');\n        }\n      }\n    }\n  }, {\n    key: 'splitDecimal',\n    value: function splitDecimal(numStr) {\n      var allowNegative = this.props.allowNegative;\n\n      var hasNagation = numStr[0] === '-';\n      var addNegation = hasNagation && allowNegative;\n      numStr = numStr.replace('-', '');\n\n      var parts = numStr.split('.');\n      var beforeDecimal = parts[0];\n      var afterDecimal = parts[1] || '';\n\n      return {\n        beforeDecimal: beforeDecimal,\n        afterDecimal: afterDecimal,\n        hasNagation: hasNagation,\n        addNegation: addNegation\n      };\n    }\n\n    /** Misc methods end **/\n\n    /** caret specific methods **/\n\n  }, {\n    key: 'setPatchedCaretPosition',\n    value: function setPatchedCaretPosition(el, caretPos, currentValue) {\n      /* setting caret position within timeout of 0ms is required for mobile chrome,\r\n      otherwise browser resets the caret position after we set it\r\n      We are also setting it without timeout so that in normal browser we don't see the flickering */\n      (0, _utils.setCaretPosition)(el, caretPos);\n      setTimeout(function () {\n        if (el.value === currentValue) (0, _utils.setCaretPosition)(el, caretPos);\n      }, 0);\n    }\n\n    /* This keeps the caret within typing area so people can't type in between prefix or suffix */\n\n  }, {\n    key: 'correctCaretPosition',\n    value: function correctCaretPosition(value, caretPos, direction) {\n      var _props3 = this.props,\n          prefix = _props3.prefix,\n          suffix = _props3.suffix,\n          format = _props3.format;\n\n      //in case of format as number limit between prefix and suffix\n\n      if (!format) {\n        var hasNegation = value[0] === '-';\n        return Math.min(Math.max(caretPos, prefix.length + (hasNegation ? 1 : 0)), value.length - suffix.length);\n      }\n\n      //in case if custom format method don't do anything\n      if (typeof format === 'function') return caretPos;\n\n      /* in case format is string find the closest # position from the caret position */\n\n      //in case the caretPos have input value on it don't do anything\n      if (format[caretPos] === '#' && (0, _utils.charIsNumber)(value[caretPos])) return caretPos;\n\n      //if caretPos is just after input value don't do anything\n      if (format[caretPos - 1] === '#' && (0, _utils.charIsNumber)(value[caretPos - 1])) return caretPos;\n\n      //find the nearest caret position\n      var firstHashPosition = format.indexOf('#');\n      var lastHashPosition = format.lastIndexOf('#');\n\n      //limit the cursor between the first # position and the last # position\n      caretPos = Math.min(Math.max(caretPos, firstHashPosition), lastHashPosition + 1);\n\n      var nextPos = format.substring(caretPos, format.length).indexOf('#');\n      var caretLeftBound = caretPos;\n      var caretRightBoud = caretPos + (nextPos === -1 ? 0 : nextPos);\n\n      //get the position where the last number is present\n      while (caretLeftBound > firstHashPosition && (format[caretLeftBound] !== '#' || !(0, _utils.charIsNumber)(value[caretLeftBound]))) {\n        caretLeftBound -= 1;\n      }\n\n      var goToLeft = !(0, _utils.charIsNumber)(value[caretRightBoud]) || direction === 'left' && caretPos !== firstHashPosition || caretPos - caretLeftBound < caretRightBoud - caretPos;\n\n      return goToLeft ? caretLeftBound + 1 : caretRightBoud;\n    }\n  }, {\n    key: 'getCaretPosition',\n    value: function getCaretPosition(inputValue, formattedValue, caretPos) {\n      var format = this.props.format;\n\n      var stateValue = this.state.value;\n      var numRegex = this.getNumberRegex(true);\n      var inputNumber = (inputValue.match(numRegex) || []).join('');\n      var formattedNumber = (formattedValue.match(numRegex) || []).join('');\n      var j = void 0,\n          i = void 0;\n\n      j = 0;\n\n      for (i = 0; i < caretPos; i++) {\n        var currentInputChar = inputValue[i] || '';\n        var currentFormatChar = formattedValue[j] || '';\n        //no need to increase new cursor position if formatted value does not have those characters\n        //case inputValue = 1a23 and formattedValue =  123\n        if (!currentInputChar.match(numRegex) && currentInputChar !== currentFormatChar) continue;\n\n        //When we are striping out leading zeros maintain the new cursor position\n        //Case inputValue = 00023 and formattedValue = 23;\n        if (currentInputChar === '0' && currentFormatChar.match(numRegex) && currentFormatChar !== '0' && inputNumber.length !== formattedNumber.length) continue;\n\n        //we are not using currentFormatChar because j can change here\n        while (currentInputChar !== formattedValue[j] && j < formattedValue.length) {\n          j++;\n        }j++;\n      }\n\n      if (typeof format === 'string' && !stateValue) {\n        //set it to the maximum value so it goes after the last number\n        j = formattedValue.length;\n      }\n\n      //correct caret position if its outside of editable area\n      j = this.correctCaretPosition(formattedValue, j);\n\n      return j;\n    }\n    /** caret specific methods ends **/\n\n    /** methods to remove formattting **/\n\n  }, {\n    key: 'removePrefixAndSuffix',\n    value: function removePrefixAndSuffix(val) {\n      var _props4 = this.props,\n          format = _props4.format,\n          prefix = _props4.prefix,\n          suffix = _props4.suffix;\n\n      //remove prefix and suffix\n\n      if (!format && val) {\n        var isNegative = val[0] === '-';\n\n        //remove negation sign\n        if (isNegative) val = val.substring(1, val.length);\n\n        //remove prefix\n        val = prefix && val.indexOf(prefix) === 0 ? val.substring(prefix.length, val.length) : val;\n\n        //remove suffix\n        var suffixLastIndex = val.lastIndexOf(suffix);\n        val = suffix && suffixLastIndex !== -1 && suffixLastIndex === val.length - suffix.length ? val.substring(0, suffixLastIndex) : val;\n\n        //add negation sign back\n        if (isNegative) val = '-' + val;\n      }\n\n      return val;\n    }\n  }, {\n    key: 'removePatternFormatting',\n    value: function removePatternFormatting(val) {\n      var format = this.props.format;\n\n      var formatArray = format.split('#').filter(function (str) {\n        return str !== '';\n      });\n      var start = 0;\n      var numStr = '';\n\n      for (var i = 0, ln = formatArray.length; i <= ln; i++) {\n        var part = formatArray[i] || '';\n\n        //if i is the last fragment take the index of end of the value\n        //For case like +1 (911) 911 91 91 having pattern +1 (###) ### ## ##\n        var index = i === ln ? val.length : val.indexOf(part, start);\n\n        /* in any case if we don't find the pattern part in the value assume the val as numeric string\r\n        This will be also in case if user has started typing, in any other case it will not be -1\r\n        unless wrong prop value is provided */\n        if (index === -1) {\n          numStr = val;\n          break;\n        } else {\n          numStr += val.substring(start, index);\n          start = index + part.length;\n        }\n      }\n\n      return (numStr.match(/\\d/g) || []).join('');\n    }\n  }, {\n    key: 'removeFormatting',\n    value: function removeFormatting(val) {\n      var _props5 = this.props,\n          format = _props5.format,\n          removeFormatting = _props5.removeFormatting;\n\n      if (!val) return val;\n\n      if (!format) {\n        val = this.removePrefixAndSuffix(val);\n        val = this.getFloatString(val);\n      } else if (typeof format === 'string') {\n        val = this.removePatternFormatting(val);\n      } else if (typeof removeFormatting === 'function') {\n        //condition need to be handled if format method is provide,\n        val = removeFormatting(val);\n      } else {\n        val = (val.match(/\\d/g) || []).join('');\n      }\n      return val;\n    }\n    /** methods to remove formattting end **/\n\n    /*** format specific methods start ***/\n    /**\r\n     * Format when # based string is provided\r\n     * @param  {string} numStr Numeric String\r\n     * @return {string}        formatted Value\r\n     */\n\n  }, {\n    key: 'formatWithPattern',\n    value: function formatWithPattern(numStr) {\n      var format = this.props.format;\n\n      var hashCount = 0;\n      var formattedNumberAry = format.split('');\n      for (var i = 0, ln = format.length; i < ln; i++) {\n        if (format[i] === '#') {\n          formattedNumberAry[i] = numStr[hashCount] || this.getMaskAtIndex(hashCount);\n          hashCount += 1;\n        }\n      }\n      return formattedNumberAry.join('');\n    }\n    /**\r\n     * Format the given string according to thousand separator and thousand spacing\r\n     * @param {*} beforeDecimal \r\n     * @param {*} thousandSeparator \r\n     * @param {*} thousandSpacing \r\n     */\n\n  }, {\n    key: 'formatThousand',\n    value: function formatThousand(beforeDecimal, thousandSeparator, thousandSpacing) {\n      var digitalGroup = void 0;\n      switch (thousandSpacing) {\n        case _utils.thousandGroupSpacing.two:\n          digitalGroup = /(\\d)(?=(\\d{2})+(?!\\d))/g;\n          break;\n        case _utils.thousandGroupSpacing.twoScaled:\n          digitalGroup = /(\\d)(?=(((\\d{2})+)(\\d{1})(?!\\d)))/g;\n          break;\n        case _utils.thousandGroupSpacing.four:\n          digitalGroup = /(\\d)(?=(\\d{4})+(?!\\d))/g;\n          break;\n        default:\n          digitalGroup = /(\\d)(?=(\\d{3})+(?!\\d))/g;\n      }\n\n      return beforeDecimal.replace(digitalGroup, '$1' + thousandSeparator);\n    }\n    /**\r\n     * @param  {string} numStr Numeric string/floatString] It always have decimalSeparator as .\r\n     * @return {string} formatted Value\r\n     */\n\n  }, {\n    key: 'formatAsNumber',\n    value: function formatAsNumber(numStr) {\n      var _props6 = this.props,\n          decimalScale = _props6.decimalScale,\n          fixedDecimalScale = _props6.fixedDecimalScale,\n          prefix = _props6.prefix,\n          suffix = _props6.suffix;\n\n      var _getSeparators4 = this.getSeparators(),\n          thousandSeparator = _getSeparators4.thousandSeparator,\n          decimalSeparator = _getSeparators4.decimalSeparator,\n          thousandSpacing = _getSeparators4.thousandSpacing;\n\n      var hasDecimalSeparator = numStr.indexOf('.') !== -1 || decimalScale && fixedDecimalScale;\n\n      var _splitDecimal = this.splitDecimal(numStr),\n          beforeDecimal = _splitDecimal.beforeDecimal,\n          afterDecimal = _splitDecimal.afterDecimal,\n          addNegation = _splitDecimal.addNegation; // eslint-disable-line prefer-const\n\n      //apply decimal precision if its defined\n\n\n      if (decimalScale !== undefined) afterDecimal = (0, _utils.limitToScale)(afterDecimal, decimalScale, fixedDecimalScale);\n\n      if (thousandSeparator) {\n        beforeDecimal = this.formatThousand(beforeDecimal, thousandSeparator, thousandSpacing);\n      }\n\n      //add prefix and suffix\n      if (prefix) beforeDecimal = prefix + beforeDecimal;\n      if (suffix) afterDecimal = afterDecimal + suffix;\n\n      //restore negation sign\n      if (addNegation) beforeDecimal = '-' + beforeDecimal;\n\n      numStr = beforeDecimal + (hasDecimalSeparator && decimalSeparator || '') + afterDecimal;\n\n      return numStr;\n    }\n  }, {\n    key: 'formatNumString',\n    value: function formatNumString() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var format = this.props.format;\n\n      var formattedValue = value;\n\n      if (value === '') {\n        formattedValue = '';\n      } else if (value === '-' && !format) {\n        formattedValue = '-';\n        value = '';\n      } else if (typeof format === 'string') {\n        formattedValue = this.formatWithPattern(formattedValue);\n      } else if (typeof format === 'function') {\n        formattedValue = format(formattedValue);\n      } else {\n        formattedValue = this.formatAsNumber(formattedValue);\n      }\n\n      return formattedValue;\n    }\n  }, {\n    key: 'formatValueProp',\n    value: function formatValueProp() {\n      var _props7 = this.props,\n          format = _props7.format,\n          decimalScale = _props7.decimalScale,\n          fixedDecimalScale = _props7.fixedDecimalScale;\n      var _props8 = this.props,\n          value = _props8.value,\n          isNumericString = _props8.isNumericString;\n\n      // if value is not defined return empty string\n\n      if (value === undefined) return '';\n\n      if (typeof value === 'number') {\n        value = value.toString();\n        isNumericString = true;\n      }\n\n      //round the number based on decimalScale\n      //format only if non formatted value is provided\n      if (isNumericString && !format && typeof decimalScale === 'number') {\n        value = (0, _utils.roundToPrecision)(value, decimalScale, fixedDecimalScale);\n      }\n\n      var formattedValue = isNumericString ? this.formatNumString(value) : this.formatInput(value);\n\n      return formattedValue;\n    }\n  }, {\n    key: 'formatNegation',\n    value: function formatNegation() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var allowNegative = this.props.allowNegative;\n\n      var negationRegex = new RegExp('(-)');\n      var doubleNegationRegex = new RegExp('(-)(.)*(-)');\n\n      // Check number has '-' value\n      var hasNegation = negationRegex.test(value);\n\n      // Check number has 2 or more '-' values\n      var removeNegation = doubleNegationRegex.test(value);\n\n      //remove negation\n      value = value.replace(/-/g, '');\n\n      if (hasNegation && !removeNegation && allowNegative) {\n        value = '-' + value;\n      }\n\n      return value;\n    }\n  }, {\n    key: 'formatInput',\n    value: function formatInput() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var format = this.props.format;\n\n      //format negation only if we are formatting as number\n\n      if (!format) {\n        value = this.formatNegation(value);\n      }\n\n      //remove formatting from number\n      value = this.removeFormatting(value);\n\n      return this.formatNumString(value);\n    }\n\n    /*** format specific methods end ***/\n\n  }, {\n    key: 'isCharacterAFormat',\n    value: function isCharacterAFormat(caretPos, value) {\n      var _props9 = this.props,\n          format = _props9.format,\n          prefix = _props9.prefix,\n          suffix = _props9.suffix,\n          decimalScale = _props9.decimalScale,\n          fixedDecimalScale = _props9.fixedDecimalScale;\n\n      var _getSeparators5 = this.getSeparators(),\n          decimalSeparator = _getSeparators5.decimalSeparator;\n\n      //check within format pattern\n\n\n      if (typeof format === 'string' && format[caretPos] !== '#') return true;\n\n      //check in number format\n      if (!format && (caretPos < prefix.length || caretPos >= value.length - suffix.length || decimalScale && fixedDecimalScale && value[caretPos] === decimalSeparator)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'checkIfFormatGotDeleted',\n    value: function checkIfFormatGotDeleted(start, end, value) {\n      for (var i = start; i < end; i++) {\n        if (this.isCharacterAFormat(i, value)) return true;\n      }\n      return false;\n    }\n\n    /**\r\n     * This will check if any formatting got removed by the delete or backspace and reset the value\r\n     * It will also work as fallback if android chome keyDown handler does not work\r\n     **/\n\n  }, {\n    key: 'correctInputValue',\n    value: function correctInputValue(caretPos, lastValue, value) {\n      var format = this.props.format;\n\n      var lastNumStr = this.state.numAsString || '';\n\n      //don't do anyhting if something got added, or if value is empty string (when whole input is cleared)\n      if (value.length >= lastValue.length || !value.length) {\n        return value;\n      }\n\n      var start = caretPos;\n      var lastValueParts = (0, _utils.splitString)(lastValue, caretPos);\n      var newValueParts = (0, _utils.splitString)(value, caretPos);\n      var deletedIndex = lastValueParts[1].lastIndexOf(newValueParts[1]);\n      var diff = deletedIndex !== -1 ? lastValueParts[1].substring(0, deletedIndex) : '';\n      var end = start + diff.length;\n\n      //if format got deleted reset the value to last value\n      if (this.checkIfFormatGotDeleted(start, end, lastValue)) {\n        value = lastValue;\n      }\n\n      //for numbers check if beforeDecimal got deleted and there is nothing after decimal,\n      //clear all numbers in such case while keeping the - sign\n      if (!format) {\n        var numericString = this.removeFormatting(value);\n\n        var _splitDecimal2 = this.splitDecimal(numericString),\n            beforeDecimal = _splitDecimal2.beforeDecimal,\n            afterDecimal = _splitDecimal2.afterDecimal,\n            addNegation = _splitDecimal2.addNegation; // eslint-disable-line prefer-const\n\n        //clear only if something got deleted\n\n\n        if (numericString.length < lastNumStr.length && beforeDecimal === '' && !parseFloat(afterDecimal)) {\n          return addNegation ? '-' : '';\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(e) {\n      e.persist();\n      var el = e.target;\n      var inputValue = el.value;\n      var state = this.state,\n          props = this.props;\n      var isAllowed = props.isAllowed;\n\n      var lastValue = state.value || '';\n\n      /*Max of selectionStart and selectionEnd is taken for the patch of pixel and other mobile device caret bug*/\n      var currentCaretPosition = Math.max(el.selectionStart, el.selectionEnd);\n\n      inputValue = this.correctInputValue(currentCaretPosition, lastValue, inputValue);\n\n      var formattedValue = this.formatInput(inputValue) || '';\n      var numAsString = this.removeFormatting(formattedValue);\n\n      var valueObj = {\n        formattedValue: formattedValue,\n        value: numAsString,\n        floatValue: parseFloat(numAsString)\n      };\n\n      if (!isAllowed(valueObj)) {\n        formattedValue = lastValue;\n      }\n\n      //set the value imperatively, this is required for IE fix\n      el.value = formattedValue;\n\n      //get the caret position\n      var caretPos = this.getCaretPosition(inputValue, formattedValue, currentCaretPosition);\n\n      //set caret position\n      this.setPatchedCaretPosition(el, caretPos, formattedValue);\n\n      //change the state\n      if (formattedValue !== lastValue) {\n        this.setState({ value: formattedValue, numAsString: numAsString }, function () {\n          props.onValueChange(valueObj);\n          props.onChange(e);\n        });\n      } else {\n        props.onChange(e);\n      }\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(e) {\n      var props = this.props,\n          state = this.state;\n      var format = props.format,\n          onBlur = props.onBlur;\n      var numAsString = state.numAsString;\n\n      var lastValue = state.value;\n      if (!format) {\n        numAsString = (0, _utils.fixLeadingZero)(numAsString);\n        var formattedValue = this.formatNumString(numAsString);\n        var valueObj = {\n          formattedValue: formattedValue,\n          value: numAsString,\n          floatValue: parseFloat(numAsString)\n        };\n\n        //change the state\n        if (formattedValue !== lastValue) {\n          // the event needs to be persisted because its properties can be accessed in an asynchronous way\n          e.persist();\n          this.setState({ value: formattedValue, numAsString: numAsString }, function () {\n            props.onValueChange(valueObj);\n            onBlur(e);\n          });\n          return;\n        }\n      }\n      onBlur(e);\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(e) {\n      var el = e.target;\n      var key = e.key;\n      var selectionEnd = el.selectionEnd,\n          value = el.value;\n      var selectionStart = el.selectionStart;\n\n      var expectedCaretPosition = void 0;\n      var _props10 = this.props,\n          decimalScale = _props10.decimalScale,\n          fixedDecimalScale = _props10.fixedDecimalScale,\n          prefix = _props10.prefix,\n          suffix = _props10.suffix,\n          format = _props10.format,\n          onKeyDown = _props10.onKeyDown;\n\n      var ignoreDecimalSeparator = decimalScale !== undefined && fixedDecimalScale;\n      var numRegex = this.getNumberRegex(false, ignoreDecimalSeparator);\n      var negativeRegex = new RegExp('-');\n      var isPatternFormat = typeof format === 'string';\n\n      //Handle backspace and delete against non numerical/decimal characters or arrow keys\n      if (key === 'ArrowLeft' || key === 'Backspace') {\n        expectedCaretPosition = selectionStart - 1;\n      } else if (key === 'ArrowRight') {\n        expectedCaretPosition = selectionStart + 1;\n      } else if (key === 'Delete') {\n        expectedCaretPosition = selectionStart;\n      }\n\n      //if expectedCaretPosition is not set it means we don't want to Handle keyDown\n      //also if multiple characters are selected don't handle\n      if (expectedCaretPosition === undefined || selectionStart !== selectionEnd) {\n        onKeyDown(e);\n        return;\n      }\n\n      var newCaretPosition = expectedCaretPosition;\n      var leftBound = isPatternFormat ? format.indexOf('#') : prefix.length;\n      var rightBound = isPatternFormat ? format.lastIndexOf('#') + 1 : value.length - suffix.length;\n\n      if (key === 'ArrowLeft' || key === 'ArrowRight') {\n        var direction = key === 'ArrowLeft' ? 'left' : 'right';\n        newCaretPosition = this.correctCaretPosition(value, expectedCaretPosition, direction);\n      } else if (key === 'Delete' && !numRegex.test(value[expectedCaretPosition]) && !negativeRegex.test(value[expectedCaretPosition])) {\n        while (!numRegex.test(value[newCaretPosition]) && newCaretPosition < rightBound) {\n          newCaretPosition++;\n        }\n      } else if (key === 'Backspace' && !numRegex.test(value[expectedCaretPosition]) && !negativeRegex.test(value[expectedCaretPosition])) {\n        while (!numRegex.test(value[newCaretPosition - 1]) && newCaretPosition > leftBound) {\n          newCaretPosition--;\n        }\n        newCaretPosition = this.correctCaretPosition(value, newCaretPosition, 'left');\n      }\n\n      if (newCaretPosition !== expectedCaretPosition || expectedCaretPosition < leftBound || expectedCaretPosition > rightBound) {\n        e.preventDefault();\n        this.setPatchedCaretPosition(el, newCaretPosition, value);\n      }\n\n      /* NOTE: this is just required for unit test as we need to get the newCaretPosition,\r\n              Remove this when you find different solution */\n      if (e.isUnitTestRun) {\n        this.setPatchedCaretPosition(el, newCaretPosition, value);\n      }\n\n      this.props.onKeyDown(e);\n    }\n\n    /** required to handle the caret position when click anywhere within the input **/\n\n  }, {\n    key: 'onMouseUp',\n    value: function onMouseUp(e) {\n      var el = e.target;\n      var selectionStart = el.selectionStart,\n          selectionEnd = el.selectionEnd,\n          value = el.value;\n\n\n      if (selectionStart === selectionEnd) {\n        var caretPostion = this.correctCaretPosition(value, selectionStart);\n        if (caretPostion !== selectionStart) {\n          this.setPatchedCaretPosition(el, caretPostion, value);\n        }\n      }\n\n      this.props.onMouseUp(e);\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus(e) {\n      var _this2 = this;\n\n      // Workaround Chrome and Safari bug https://bugs.chromium.org/p/chromium/issues/detail?id=779328\n      // (onFocus event target selectionStart is always 0 before setTimeout)\n      e.persist();\n      setTimeout(function () {\n        var el = e.target;\n        var selectionStart = el.selectionStart,\n            value = el.value;\n\n\n        var caretPosition = _this2.correctCaretPosition(value, selectionStart);\n        if (caretPosition !== selectionStart) {\n          _this2.setPatchedCaretPosition(el, caretPosition, value);\n        }\n\n        _this2.props.onFocus(e);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props11 = this.props,\n          type = _props11.type,\n          displayType = _props11.displayType,\n          customInput = _props11.customInput,\n          renderText = _props11.renderText;\n      var value = this.state.value;\n\n\n      var otherProps = (0, _utils.omit)(this.props, propTypes);\n\n      var inputProps = _extends({}, otherProps, {\n        type: type,\n        value: value,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onMouseUp: this.onMouseUp,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      });\n\n      if (displayType === 'text') {\n        return renderText ? renderText(value) || null : _react2.default.createElement(\n          'span',\n          otherProps,\n          value\n        );\n      } else if (customInput) {\n        var CustomInput = customInput;\n        return _react2.default.createElement(CustomInput, inputProps);\n      }\n\n      return _react2.default.createElement('input', inputProps);\n    }\n  }]);\n\n  return CurrencyFormat;\n}(_react2.default.Component);\n\nCurrencyFormat.propTypes = propTypes;\nCurrencyFormat.defaultProps = defaultProps;\n\nmodule.exports = CurrencyFormat;"],"mappings":"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"},"metadata":{},"sourceType":"script"}