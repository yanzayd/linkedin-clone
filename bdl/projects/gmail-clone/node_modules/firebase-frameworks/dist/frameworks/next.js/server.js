"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handle = void 0;
const url_1 = require("url");
const next_1 = __importDefault(require("next"));
const nextApp = (0, next_1.default)({ dev: false, dir: process.cwd() });
const nextAppPrepare = nextApp.prepare();
const handle = (req, res) => __awaiter(void 0, void 0, void 0, function* () {
    const fauxHost = 'http://firebase-frameworks';
    const url = new URL(`${fauxHost}${req.url}`);
    url.searchParams.delete('__firebaseAppName');
    if (req.firebaseApp)
        url.searchParams.set('__firebaseAppName', req.firebaseApp.name);
    const parsedUrl = (0, url_1.parse)(url.toString().slice(fauxHost.length), true);
    yield nextAppPrepare;
    nextApp.getRequestHandler()(req, res, parsedUrl);
});
exports.handle = handle;
